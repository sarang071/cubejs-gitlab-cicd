stages:   
  - build
  - sonarqube
  - setup
  - deploy
  - cleanup

build Image and Push to ACR:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"cdexgitlab.azurecr.io\":{\"username\":\"cdexgitlab\",\"password\":\"qo1rlzlvdU/VoVaTD8oRiUSVzLLUPEfiWkGMHdcS3m+ACRA5NDj6\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --destination cdexgitlab.azurecr.io/cubejs:$CI_JOB_ID  

.code-quality-job:  
  stage: sonarqube 
  script:
    - echo "scanning code"
    -  mvn sonar:sonar -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_LOGIN}

Prequisites:
  stage: setup
  image: mcr.microsoft.com/azure-cli
  before_script:
    -  cd cubejs-manifests
  script:
    # Install kubectl
    - ls -al
    - az aks install-cli

    # Authenticate with AKS cluster
    - az login --service-principal -u 5c023096-5c14-43b1-acae-f0f22f115f56 -p grY8Q~PDZ71PaveGw448ZbKhGzCHvja4x~Jtla5E --tenant a787b852-29bf-4164-add5-7d55cac58f45
    - subscriptionId="$(az account list --query "[?isDefault].id" -o tsv)"
    - echo $subscriptionId
    - az account set --subscription 0db1b169-34da-432c-98d4-2db3188443a7
    # - az aks get-credentials --resource-group Gitlab --name $AKS_CLUSTER_NAME
    - az aks get-credentials --resource-group Test --name gitlab

    # Installing Ingress Controller
    - az aks update -n Gitlab -g Test  --enable-disk-driver --enable-file-driver --enable-blob-driver -y
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    - kubectl create namespace ingress-basic
    - helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    -  helm repo update
    - helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-basic \--set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz


deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  script:
    # Install kubectl
    - cd cubejs-manifests
    - sed -i "s/replaceImageTag/${CI_JOB_ID}/g" *
    - ls -al
    - az aks install-cli

    # Authenticate with AKS cluster
    - az login --service-principal -u 5c023096-5c14-43b1-acae-f0f22f115f56 -p grY8Q~PDZ71PaveGw448ZbKhGzCHvja4x~Jtla5E --tenant a787b852-29bf-4164-add5-7d55cac58f45
    - subscriptionId="$(az account list --query "[?isDefault].id" -o tsv)"
    - echo $subscriptionId
    - az account set --subscription 0db1b169-34da-432c-98d4-2db3188443a7
    # - az aks get-credentials --resource-group Gitlab --name $AKS_CLUSTER_NAME
    - az aks get-credentials --resource-group Test --name gitlab
    - ls -al

    # Deploy to AKS cluster using kubectl
    - kubectl apply -f .
    
Cleanup:
  when: manual
  stage: cleanup
  image: mcr.microsoft.com/azure-cli
  script:
    # Install kubectl
    - cd cubejs-manifests
    - az aks install-cli

    # Authenticate with AKS cluster
    - az login --service-principal -u 5c023096-5c14-43b1-acae-f0f22f115f56 -p grY8Q~PDZ71PaveGw448ZbKhGzCHvja4x~Jtla5E --tenant a787b852-29bf-4164-add5-7d55cac58f45
    - subscriptionId="$(az account list --query "[?isDefault].id" -o tsv)"
    - echo $subscriptionId
    - az account set --subscription 0db1b169-34da-432c-98d4-2db3188443a7
    # - az aks get-credentials --resource-group Gitlab --name $AKS_CLUSTER_NAME
    - az aks get-credentials --resource-group Test --name gitlab
    - ls -al

    # Deploy to AKS cluster using kubectl
    - kubectl delete -f .
    - kubectl delete namespace ingress-basic